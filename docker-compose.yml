version: "3.9"

services:
  adminer:
    build:
      context: $APP_DIRECTORY
      dockerfile: $DOCKER_DIRECTORY/images/adminer/Dockerfile
    container_name: pmd_adminer
    depends_on:
      - mysql
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    networks:
      - external
      - internal

  app-server:
    build:
      args:
        DOCKER_IMAGE_CONTEXT_PATH: $DOCKER_IMAGE_CONTEXT_PATH
        FRONTEND_CONTEXT_PATH: $FRONTEND_CONTEXT_PATH
        GROUP_ID: $GROUP_ID
        USER_ID: $USER_ID
      context: $APP_DIRECTORY
      dockerfile: $DOCKER_DIRECTORY/images/app-server/Dockerfile
    container_name: pmd_app-server
    depends_on:
      - php-fpm
    networks:
      - external
      - internal
    volumes:
      - $APP_SERVER_LOG_DIRECTORY:/var/log/nginx
      - $DOCKER_DIRECTORY/images/app-server/default.conf:/etc/nginx/conf.d/default.conf
      - $FRONTEND_DIRECTORY:/home/dockeruser/frontend

  http-proxy:
    build:
      args:
        DOCKER_IMAGE_CONTEXT_PATH: $DOCKER_IMAGE_CONTEXT_PATH
        GROUP_ID: $GROUP_ID
        USER_ID: $USER_ID
      context: $APP_DIRECTORY
      dockerfile: $DOCKER_DIRECTORY/images/http-proxy/Dockerfile
    container_name: pmd_http-proxy
    depends_on:
      - adminer
      - app-server
      - redis-admin
    networks:
      - external
    ports:
      - "80:80"
    volumes:
      - $DOCKER_DIRECTORY/http-proxy/default.conf:/etc/nginx/conf.d/default.conf
      - $HTTP_PROXY_LOG_DIRECTORY:/var/log/nginx

  mysql:
    build:
      context: $APP_DIRECTORY
      dockerfile: $DOCKER_DIRECTORY/images/mysql/Dockerfile
    container_name: pmd_mysql
    environment:
      MYSQL_DATABASE: "pmd"
      MYSQL_PASSWORD_FILE: /run/secrets/pmd_mysql_password
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/pmd_mysql_root_password
      MYSQL_USER_FILE: /run/secrets/pmd_mysql_user
    networks:
      - internal
    platform: linux/amd64
    secrets:
      - pmd_mysql_password
      - pmd_mysql_root_password
      - pmd_mysql_user
    volumes:
      - mysql:/var/lib/mysql

  php-fpm:
    build:
      args:
        BACKEND_CONTEXT_PATH: $BACKEND_CONTEXT_PATH
        DOCKER_IMAGE_CONTEXT_PATH: $DOCKER_IMAGE_CONTEXT_PATH
        GROUP_ID: $GROUP_ID
        USER_ID: $USER_ID
      context: $APP_DIRECTORY
      dockerfile: $DOCKER_DIRECTORY/images/php-fpm/Dockerfile
    container_name: pmd_php-fpm
    depends_on:
      - mysql
    environment:
      ADMIN_EMAIL: "admin@pmd.local"
      DEBUG_LOG_DIRECTORY: "var/log/debug"
      ENVIRONMENT: "development"
      ERROR_REPORTING: "true"
      FORCE_HTTPS: "false"
      INFO_EMAIL: "info@pmd.local"
      MYSQL_DATABASE: "pmd"
      MYSQL_PASSWORD_FILE: /run/secrets/pmd_mysql_password
      MYSQL_USER_FILE: /run/secrets/pmd_mysql_user
      MYSQL_CHARSET: "utf-8"
      MYSQL_DRIVER: "pdo_mysql"
      MYSQL_HOST: "mysql"
      MYSQL_PORT: "3306"
      MYSQL_SERVER_VERSION: "8.0.24"
      REDIS_PORT: "6379"
      SITE_NAME: "pmd"
    networks:
      - internal
    secrets:
      - pmd_mysql_password
      - pmd_mysql_user
    volumes:
      - $BACKEND_DIRECTORY:/home/dockeruser/backend
      - $DOCKER_DIRECTORY/php-fpm/php.ini:/usr/local/etc/php/php.ini

  redis:
    build:
      context: $APP_DIRECTORY
      dockerfile: $DOCKER_DIRECTORY/images/redis/Dockerfile
    container_name: pmd_redis
    networks:
      - internal

  redis-admin:
    build:
      context: $APP_DIRECTORY
      dockerfile: $DOCKER_DIRECTORY/images/redis-admin/Dockerfile
    container_name: pmd_redis-admin
    depends_on:
      - redis
    environment:
      REDIS_1_HOST: "redis"
    networks:
      - external
      - internal

networks:
  internal:
  external:

secrets:
  pmd_mysql_password:
    file: $DOCKER_SECRET_DIRECTORY/pmd_mysql_password.txt
  pmd_mysql_root_password:
    file: $DOCKER_SECRET_DIRECTORY/pmd_mysql_root_password.txt
  pmd_mysql_user:
    file: $DOCKER_SECRET_DIRECTORY/pmd_mysql_user.txt

volumes:
  mysql: